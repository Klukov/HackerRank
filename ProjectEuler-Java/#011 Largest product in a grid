import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {
    
    public static int magic (int [][] m) {
        int max = 0;
        for (int i = 0; i < 20; i++) {
            for (int j = 0; j < 20; j++) {
                int product;
                // down
                if (i < 17) {
                    product = m[i][j] * m[i+1][j] * m[i+2][j] * m[i+3][j];
                    if (product > max) {
                        max = product;
                    }
                }
                // left
                if (j < 17) {
                    product = m[i][j] * m[i][j+1] * m[i][j+2] * m[i][j+3];
                    if (product > max) {
                        max = product;
                    }
                }
                // first diagonal
                if ((i < 17) && (j < 17)) {
                    product = m[i][j] * m[i+1][j+1] * m[i+2][j+2] * m[i+3][j+3];
                    if (product > max) {
                        max = product;
                    }
                }
                // second diagonal
                if ((i < 17) && (j > 2)) {
                    product = m[i][j] * m[i+1][j-1] * m[i+2][j-2] * m[i+3][j-3];
                    if (product > max) {
                        max = product;
                    }
                }
            }
        }
        return max;
    }
    
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int[][] grid = new int[20][20];
        for(int grid_i=0; grid_i < 20; grid_i++){
            for(int grid_j=0; grid_j < 20; grid_j++){
                grid[grid_i][grid_j] = in.nextInt();
            }
        }
        System.out.println(magic(grid));
    }
}
